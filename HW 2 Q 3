.data
result: .word 0
n: .word 0
.text 
li $v0, 5

syscall

sw $v0, n

lw $t0, n

loop:
addi $sp, $sp, -4
sw $ra, 0($sp)
 
#base case
beq $t7, $zero, base_case

#recursive case
addi $t0, $t0, -1    # Decrement N by 1
move $a0, $t0        # Pass N-1 as the argument
jal loop           # Recursive call
add $t1, $t1, $t0
addi $t1, $t1, 1
lw $t3, 0($v0)
add $v0, $t1, $t3

lw $ra, 0($sp)
addi $sp, $sp, 4
jr $ra

# Base case: return 0
 output:  
    sw $v0, result
    li $v0, 4
    la $a0, result
    syscall
    
    li $v0, 10
    syscall 
base_case:
    li $v0, 0
    
    # Function epilogue for the base case
    # Restore the return address from the stack and return
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra
 